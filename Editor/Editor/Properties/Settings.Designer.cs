//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Editor.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.5.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("50, 50")]
        public global::System.Drawing.Point EditorMainPos {
            get {
                return ((global::System.Drawing.Point)(this["EditorMainPos"]));
            }
            set {
                this["EditorMainPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point FileRegPos {
            get {
                return ((global::System.Drawing.Point)(this["FileRegPos"]));
            }
            set {
                this["FileRegPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("300, 300")]
        public global::System.Drawing.Size EditorMainSize {
            get {
                return ((global::System.Drawing.Size)(this["EditorMainSize"]));
            }
            set {
                this["EditorMainSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100, 300")]
        public global::System.Drawing.Size FileRegSize {
            get {
                return ((global::System.Drawing.Size)(this["FileRegSize"]));
            }
            set {
                this["FileRegSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point SceneSelectorPos {
            get {
                return ((global::System.Drawing.Point)(this["SceneSelectorPos"]));
            }
            set {
                this["SceneSelectorPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100, 300")]
        public global::System.Drawing.Size SceneSelectorSize {
            get {
                return ((global::System.Drawing.Size)(this["SceneSelectorSize"]));
            }
            set {
                this["SceneSelectorSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool FileRegVisible {
            get {
                return ((bool)(this["FileRegVisible"]));
            }
            set {
                this["FileRegVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SceneSelVisible {
            get {
                return ((bool)(this["SceneSelVisible"]));
            }
            set {
                this["SceneSelVisible"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("200, 0")]
        public global::System.Drawing.Point SceneViewPos {
            get {
                return ((global::System.Drawing.Point)(this["SceneViewPos"]));
            }
            set {
                this["SceneViewPos"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("100, 300")]
        public global::System.Drawing.Size SceneViewSize {
            get {
                return ((global::System.Drawing.Size)(this["SceneViewSize"]));
            }
            set {
                this["SceneViewSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SceneViewVisible {
            get {
                return ((bool)(this["SceneViewVisible"]));
            }
            set {
                this["SceneViewVisible"] = value;
            }
        }
    }
}
